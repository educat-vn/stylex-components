import type { Plugin } from "vite";
import { Options as StyleXOptions } from "@stylexjs/babel-plugin";
interface StyleXVitePluginOptions extends Partial<Pick<StyleXOptions, "test" | "classNamePrefix" | "unstable_moduleResolution" | "useRemForFontSize" | "importSources">> {
    /**
     * @deprecated Use `importSources` instead. You should be able to just replace `stylexImports` with `importSources` in your config.
     */
    stylexImports?: string[];
    /**
     * A map of aliases to their respective paths.
     *
     * @example
     *
     * ```ts
     * {
     *   "@/*": [path.resolve(__dirname, "src", "*")]
     * }
     * ```
     *
     * Ensure that the paths are absolute and that you include the `*` at the end of the path.
     */
    aliases?: {
        [alias: string]: string[];
    };
    /**
     * Define external modules that export StyleX styles.
     *
     * This is useful when you want to pull UI tokens or components from a separate package, like a Design System.
     *
     * @default ["@stylexjs/open-props"]
     */
    libraries?: string[];
}
export default function styleXVitePlugin({ unstable_moduleResolution, stylexImports, libraries: inputLibraries, ...options }?: Omit<StyleXVitePluginOptions, "dev" | "fileName">): Plugin;
export {};
//# sourceMappingURL=index.d.mts.map