{
  "version": 3,
  "sources": ["../../../../../../node_modules/@stylexjs/stylex/lib/es/StyleXSheet.mjs", "../../../../../../node_modules/@stylexjs/stylex/lib/es/stylex-inject.mjs"],
  "sourcesContent": ["function getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar invariant_1;\nvar hasRequiredInvariant;\n\nfunction requireInvariant () {\n\tif (hasRequiredInvariant) return invariant_1;\n\thasRequiredInvariant = 1;\n\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\n\tvar NODE_ENV = process.env.NODE_ENV;\n\n\tvar invariant = function(condition, format, a, b, c, d, e, f) {\n\t  if (NODE_ENV !== 'production') {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  }\n\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error(\n\t        'Minified exception occurred; use the non-minified dev environment ' +\n\t        'for the full error message and additional helpful warnings.'\n\t      );\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(\n\t        format.replace(/%s/g, function() { return args[argIndex++]; })\n\t      );\n\t      error.name = 'Invariant Violation';\n\t    }\n\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t};\n\n\tinvariant_1 = invariant;\n\treturn invariant_1;\n}\n\nvar invariantExports = requireInvariant();\nvar invariant = /*@__PURE__*/getDefaultExportFromCjs(invariantExports);\n\nconst LIGHT_MODE_CLASS_NAME = '__fb-light-mode';\nconst DARK_MODE_CLASS_NAME = '__fb-dark-mode';\nfunction buildTheme(selector, theme) {\n  const lines = [];\n  lines.push(`${selector} {`);\n  for (const key in theme) {\n    const value = theme[key];\n    lines.push(`  --${key}: ${value};`);\n  }\n  lines.push('}');\n  return lines.join('\\n');\n}\nfunction makeStyleTag() {\n  const tag = document.createElement('style');\n  tag.setAttribute('type', 'text/css');\n  tag.setAttribute('data-stylex', 'true');\n  const head = document.head || document.getElementsByTagName('head')[0];\n  invariant(head, 'expected head');\n  head.appendChild(tag);\n  return tag;\n}\nfunction doesSupportCSSVariables() {\n  return globalThis.CSS != null && globalThis.CSS.supports != null && globalThis.CSS.supports('--fake-var:0');\n}\nconst VARIABLE_MATCH = /var\\(--(.*?)\\)/g;\nclass StyleXSheet {\n  static LIGHT_MODE_CLASS_NAME = (() => LIGHT_MODE_CLASS_NAME)();\n  static DARK_MODE_CLASS_NAME = (() => DARK_MODE_CLASS_NAME)();\n  constructor(opts) {\n    this.tag = null;\n    this.injected = false;\n    this.ruleForPriority = new Map();\n    this.rules = [];\n    this.rootTheme = opts.rootTheme;\n    this.rootDarkTheme = opts.rootDarkTheme;\n    this.supportsVariables = opts.supportsVariables ?? doesSupportCSSVariables();\n  }\n  getVariableMatch() {\n    return VARIABLE_MATCH;\n  }\n  isHeadless() {\n    return this.tag == null || globalThis?.document?.body == null;\n  }\n  getTag() {\n    const {\n      tag\n    } = this;\n    invariant(tag != null, 'expected tag');\n    return tag;\n  }\n  getCSS() {\n    return this.rules.join('\\n');\n  }\n  getRulePosition(rule) {\n    return this.rules.indexOf(rule);\n  }\n  getRuleCount() {\n    return this.rules.length;\n  }\n  inject() {\n    if (this.injected) {\n      return;\n    }\n    this.injected = true;\n    if (globalThis.document?.body == null) {\n      this.injectTheme();\n      return;\n    }\n    this.tag = makeStyleTag();\n    this.injectTheme();\n  }\n  injectTheme() {\n    if (this.rootTheme != null) {\n      this.insert(buildTheme(`:root, .${LIGHT_MODE_CLASS_NAME}`, this.rootTheme), 0);\n    }\n    if (this.rootDarkTheme != null) {\n      this.insert(buildTheme(`.${DARK_MODE_CLASS_NAME}:root, .${DARK_MODE_CLASS_NAME}`, this.rootDarkTheme), 0);\n    }\n  }\n  __injectCustomThemeForTesting(selector, theme) {\n    if (theme != null) {\n      this.insert(buildTheme(selector, theme), 0);\n    }\n  }\n  delete(rule) {\n    const index = this.rules.indexOf(rule);\n    invariant(index >= 0, \"Couldn't find the index for rule %s\", rule);\n    this.rules.splice(index, 1);\n    if (this.isHeadless()) {\n      return;\n    }\n    const tag = this.getTag();\n    const sheet = tag.sheet;\n    invariant(sheet, 'expected sheet');\n    sheet.deleteRule(index);\n  }\n  normalizeRule(rule) {\n    const {\n      rootTheme\n    } = this;\n    if (this.supportsVariables || rootTheme == null) {\n      return rule;\n    }\n    return rule.replace(VARIABLE_MATCH, (_match, name) => {\n      return rootTheme[name];\n    });\n  }\n  getInsertPositionForPriority(priority) {\n    const priorityRule = this.ruleForPriority.get(priority);\n    if (priorityRule != null) {\n      return this.rules.indexOf(priorityRule) + 1;\n    }\n    const priorities = Array.from(this.ruleForPriority.keys()).sort((a, b) => b - a).filter(num => num > priority ? 1 : 0);\n    if (priorities.length === 0) {\n      return this.getRuleCount();\n    }\n    const lastPriority = priorities.pop();\n    if (lastPriority == null) {\n      return this.getRuleCount();\n    }\n    return this.rules.indexOf(this.ruleForPriority.get(lastPriority));\n  }\n  insert(rawLTRRule, priority, rawRTLRule) {\n    if (this.injected === false) {\n      this.inject();\n    }\n    if (rawRTLRule != null) {\n      this.insert(addAncestorSelector(rawLTRRule, \"html:not([dir='rtl'])\"), priority);\n      this.insert(addAncestorSelector(rawRTLRule, \"html[dir='rtl']\"), priority);\n      return;\n    }\n    const rawRule = rawLTRRule;\n    if (this.rules.includes(rawRule)) {\n      return;\n    }\n    const rule = this.normalizeRule(addSpecificityLevel(rawRule, Math.floor(priority / 1000)));\n    const insertPos = this.getInsertPositionForPriority(priority);\n    this.rules.splice(insertPos, 0, rule);\n    this.ruleForPriority.set(priority, rule);\n    if (this.isHeadless()) {\n      return;\n    }\n    const tag = this.getTag();\n    const sheet = tag.sheet;\n    if (sheet != null) {\n      try {\n        sheet.insertRule(rule, Math.min(insertPos, sheet.cssRules.length));\n      } catch (err) {\n        console.error('insertRule error', err, rule, insertPos);\n      }\n    }\n  }\n}\nfunction addAncestorSelector(selector, ancestorSelector) {\n  if (!selector.startsWith('@')) {\n    return `${ancestorSelector} ${selector}`;\n  }\n  const firstBracketIndex = selector.indexOf('{');\n  const mediaQueryPart = selector.slice(0, firstBracketIndex + 1);\n  const rest = selector.slice(firstBracketIndex + 1);\n  return `${mediaQueryPart}${ancestorSelector} ${rest}`;\n}\nfunction addSpecificityLevel(selector, index) {\n  if (selector.startsWith('@keyframes')) {\n    return selector;\n  }\n  const pseudo = Array.from({\n    length: index\n  }).map(() => ':not(#\\\\#)').join('');\n  const lastOpenCurly = selector.includes('::') ? selector.indexOf('::') : selector.lastIndexOf('{');\n  const beforeCurly = selector.slice(0, lastOpenCurly);\n  const afterCurly = selector.slice(lastOpenCurly);\n  return `${beforeCurly}${pseudo}${afterCurly}`;\n}\nconst styleSheet = new StyleXSheet({\n  supportsVariables: true,\n  rootTheme: {},\n  rootDarkTheme: {}\n});\n\nexport { StyleXSheet, styleSheet };\n", "import { styleSheet } from \"./StyleXSheet.mjs\";\nexport default function inject(ltrRule, priority) {\n  let rtlRule = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  styleSheet.insert(ltrRule, priority, rtlRule);\n}"],
  "mappings": "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",
  "names": ["invariant"]
}
